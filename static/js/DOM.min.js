function SearchResult(e, t, n, r, o, c, a, l) {
    this.id = e, this.name = t, this.bar_code = n, this.selling_price = r, this.supply_price = o, this.currency = c, this.model = a, this.unit = l
}

function IsSelect(e) {
    this.ids = e || []
}

function AlertError(e, t, n) {
    swal({title: e, type: "error", text: t, confirmButtonText: "确认", showConfirmButton: !0}, function (e) {
        try {
            n()
        } catch (e) {
        }
    })
}

function AlertWarn(e, t, n) {
    swal({title: e, type: "warning", text: t, confirmButtonText: "确认", showConfirmButton: !0}, function (e) {
        if (e) try {
            n()
        } catch (e) {
        }
    })
}

function AlertConfirm(e, t, n, r, o) {
    swal({
        title: e,
        text: t,
        type: "warning",
        showCancelButton: !0,
        confirmButtonColor: "#DD6B55",
        confirmButtonText: n,
        cancelButtonText: "取消",
        closeOnConfirm: !1
    }, function (e) {
        if (e) console.log("Confirm"), r(); else try {
            console.log("Confirm"), o()
        } catch (e) {
        }
    })
}

function AjaxReturnZero(e) {
    console.log(e);
    try {
        var t = JSON.parse(e.msg), n = "";
        for (var r in t) n += "<p>订单：" + r + " " + t[r] + "<br></p>";
        swal({title: "操作失败!", type: "error", text: n, confirmButtonText: "确认", cancelButtonText: "取消", showConfirmButton: !0, html: !0}, function (e) {
            e && location.reload(!0)
        })
    } catch (t) {
        t instanceof SyntaxError && (AlertError("操作失败!", e.msg), "验证码错误" == e.msg && $("#verifyImg").click())
    }
}

function formPost(e, t, n) {
    n && $(n).prop("disabled", !0), $.ajax({
        type: "POST", url: t, data: e, success: function (e) {
            n && $(n).prop("disabled", !1), orderApiSuccess(e, "操作成功")
        }, error: function () {
            n && $(n).prop("disabled", !1), AlertError("操作失败!", "网络链接失败 或 服务器错误!", function () {
                location.reload(!0)
            })
        }
    })
}

function originFormPost(e, t, n) {
    return n && $(n).prop("disabled", !0), $.ajax({url: t, type: "POST", data: e, processData: !1, contentType: !1})
}

function isInteger(e) {
    return Math.floor(e) === e
}

function parseDom(e) {
    var t = document.createElement("div");
    return t.innerHTML = e, t.childNodes
}

function parseURL(e) {
    var t = document.createElement("a");
    return t.href = e, {
        source: e,
        protocol: t.protocol.replace(":", ""),
        host: t.hostname,
        port: t.port,
        query: t.search,
        params: function () {
            for (var e, n = {}, r = t.search.replace(/^\?/, "").split("&"), o = r.length, c = 0; c < o; c++) r[c] && (n[(e = r[c].split("="))[0]] = e[1]);
            return n
        }(),
        file: (t.pathname.match(/\/([^\/?#]+)$/i) || [, ""])[1],
        hash: t.hash.replace("#", ""),
        path: t.pathname.replace(/^([^\/])/, "/$1"),
        relative: (t.href.match(/tps?:\/\/[^\/]+(.+)/) || [, ""])[1],
        segments: t.pathname.replace(/^\//, "").split("/")
    }
}

function Trim(e, t) {
    var n;
    return n = e.replace(/(^\s+)|(\s+$)/g, ""), "g" == t.toLowerCase() && (n = n.replace(/\s/g, "")), n
}

function decode(e) {
    return unescape(e.replace(/\\(u[0-9a-fA-F]{4})/gm, "%$1"))
}

function closeInput(e) {
    var t = $(e), n = $(e).parent(), r = n.find(".inline_amount"), o = n.find(".inline_stock_true_old").text();
    console.log(o);
    var c = Number(t.find("input").val());
    if (console.log(c), "" == t.find("input").val()) return $(e).find("input").val(""), r.text(""), $(e).empty(), $(e).bind("click", function () {
        newInput(e)
    }), !1;
    !isInteger(c) || c <= -1 ? ($(e).find("input").val(""), r.text(""), $(e).empty()) : ($(e).empty().text(c), r.text(c - o)), $(e).bind("click", function () {
        newInput(e)
    })
}

function newInput(e) {
    $(e).unbind("click");
    var t = $(e).text();
    $(e).empty(), $("<input>").attr("type", "text").val(t).blur(function () {
        closeInput(e)
    }).keydown(function (t) {
        13 === t.keyCode && closeInput(e)
    }).appendTo($(e)).focus()
}

function ClearTable(e) {
    $(e).nextAll().remove(), addGoodsMark = [], oldMark = []
}

function currencyTotalCount(e) {
    function t(e, t, n) {
        return console.log(e + "->" + t + "->" + n), 0 === t || void 0 === t ? "" : n ? "<dt><p>合计</p></dt><dd><p>" + t.toFixed(2) + "&nbsp;&nbsp;" + e + "</p></dd><dt>" : "<dt><p></p></dt><dd><p>" + t.toFixed(2) + "&nbsp;&nbsp;" + e + "</p></dd><dt>"
    }

    function n() {
        $(l).each(function (e, n) {
            var a = n.slice(1);
            console.log(e), $(n).each(function (e, t) {
                var r = n.slice(1), o = Number($(t).text()), c = Number($(t).parent().find("td.amount").text());
                i[r] += c * o, console.log("币种" + r + "单件商品价格是 " + o + "，有" + c + "件，合计" + c * o + r)
            }), "purchase" === r && (0 === e ? o.append(t(a, i[a], !0)) : o.append(t(a, i[a], !1))), "order" === r && (0 === e ? c.append(t(a, i[a], !0)) : c.append(t(a, i[a], !1)))
        })
    }

    var r = e;
    if (null !== r) {
        var o = $("dl.currencyCountInsert.purchase"), c = $("dl.currencyCountInsert.order"), a = [];
        $(".RowCurrency .currency").each(function (e, t) {
            a.push("." + t.innerHTML)
        });
        var l = _.uniq(a);
        console.log(l);
        var i = {CNY: 0, AUD: 0, HKD: 0, NZD: 0};
        "purchase" === r && (console.log("入库单币种统计"), n()), "order" === r && (console.log("订单币种统计"), n())
    } else console.log("不同币种统计没有运行")
}

function readURL(e) {
    if (e.files && e.files[0]) {
        var t = new FileReader;
        t.onload = function (e) {
            $("#orderImage").attr("src", e.target.result)
        }, t.readAsDataURL(e.files[0])
    }
}

function currencyQueryBtn() {
    $(".currencyQueryBtn").click(function () {
        window.open("http://www.currencydo.com/")
    })
}

var checkForm = $(".box-body form "), addOrderBtn = $("#addOrderBtn"), confirmNewOrderBtn = $(".confirmNewOrderBtn"),
    orderCodeSearchBtn = $("#orderCodeSearchBtn"), orderPrevBtn = $(".orderPrevBtn"), orderNextBtn = $(".orderNextBtn"), orderEditBtn = $(".orderEditBtn"),
    orderEditConfirmBtn = $(".orderEditConfirmBtn"), SearchBtn = $("#SearchBtn"), SearchDatePicker = $(".SearchDatePicker"),
    SearchMonthPicker = $(".SearchMonthPicker"), resetPasswordModal = $("#resetPasswordModal"), resetPasswordBtn = $(".resetPasswordBtn"),
    resetPasswordConfirmBtn = $(".resetPasswordConfirmBtn"), checkAllBtn = $("#checkAllBtn"), checkAllBtnFalse = $("#checkAllBtnFalse"),
    AllcheckBox = $("table td input[type=checkbox]"), checkAllStatus = !0, checkAllStatusFalse = !1;
checkAllBtn.on("click", function () {
    checkAllStatus ? (AllcheckBox.each(function () {
        $(this).prop("checked", !1)
    }), checkAllStatus = !checkAllStatus) : (AllcheckBox.each(function () {
        $(this).prop("checked", !0)
    }), checkAllStatus = !checkAllStatus)
}), checkAllBtnFalse.on("click", function () {
    checkAllStatusFalse ? (AllcheckBox.each(function () {
        $(this).prop("checked", !1)
    }), checkAllStatusFalse = !checkAllStatusFalse) : (AllcheckBox.each(function () {
        $(this).prop("checked", !0)
    }), checkAllStatusFalse = !checkAllStatusFalse)
});
var orderImageUploadBtn = $("#orderImageUploadBtn"), imgFile = $("#imgFile"), orderGoodsAddBtn = $(".orderGoodsAddBtn"), goodsEditBtn = $(".goodsEditBtn"),
    addGoodsTips = $(".addGoodsTips"), goodsAddContinueBtn = $(".goodsAddContinueBtn, .goodsAddSaveBtn"), goodsEditConfirmBtn = $(".goodsEditConfirmBtn"),
    singleSubOrderBtn = $("#singleSubOrderBtn"), multiSubOrderBtn = $("#multiSubOrderBtn"), buyInAddBtn = $(".buyInAddBtn");
Array.prototype.remove = function (e) {
    var t = this.indexOf(e);
    t > -1 && this.splice(t, 1)
};
var OrderOfGoodsList = function () {
};
OrderOfGoodsList.prototype = {order_id: null, ids: []}, SearchResult.prototype = {};
var goodsdata = function () {
};
goodsdata.prototype = {orderId: null, productCode: null, productName: null, productQty: null, productId: null};
var orderSearchData = function () {
};
orderSearchData.prototype = {min_date: "", max_date: "", order_code: "", url: ""};
var subOrderData = function () {
};
subOrderData.prototype = {ids: []}, IsSelect.prototype.ids = [];
var packData = function () {
};
packData.prototype = {order_id: null, bar_code: null, qty: 1};
var navData = function () {
};
navData.prototype = {id: null, name: null, url: null, pid: null, sequence: null, hide: null};
var purchaseAddData = function () {
};
purchaseAddData.prototype = {};
var purchaseAddOneData = function () {
};
purchaseAddOneData.prototype = {};
var newOrderData = function () {
};
newOrderData.prototype = {
    order_code: null,
    cg_name: null,
    cg_number: null,
    cg_phone: null,
    cg_province: null,
    cg_city: null,
    cg_area: null,
    cg_address: null,
    goods: []
};
var editOrderData = function () {
};
editOrderData.prototype = {
    order_id: null,
    order_code: null,
    cg_name: null,
    cg_number: null,
    cg_phone: null,
    cg_province: null,
    cg_city: null,
    cg_area: null,
    cg_address: null,
    goods: []
};
var OrderGoodsData = function () {
};
OrderGoodsData.prototype = {product_code: null, qty: null};
var AlertText = {yes: "是", no: "否", userInfoEdit: ["修改员工信息", "确定要修改员工信息吗"], userResetPw: ["重置密码", "你确定要重置员工 ", " 的密码为：  "]};
!function () {
    currencyQueryBtn();
    var e = parseURL(location.href).params;
    if ($.isEmptyObject(e)) ; else {
        if (!($(".SearchKey").length > 0)) return !1;
        var t = e;
        for (var n in t) {
            var r = n, o = t[n];
            $(".SearchKey [name=" + r + "]").is("input") && $(".SearchKey [name=" + r + "]").val(decodeURIComponent(o)), $(".SearchKey [name=" + r + "]").is("select") && $(".SearchKey [name=" + r + "] option").each(function (e, t) {
                $(t).val() == o && $(t).prop("selected", !0)
            })
        }
    }
    if (SearchBtn.click(function () {
            var e = "", t = 0, n = $(".SearchKey");
            n.find("input").each(function (n, r) {
                "" != $(r).val() && (e += 0 == t ? "?" : "&", t++, e += $(r).prop("name") + "=" + $(r).val())
            }), n.find("select").each(function (n, r) {
                "" != $(r).val() && (e += 0 == t ? "?" : "&", t++, e += $(r).prop("name") + "=" + $(r).val())
            }), location.href = "" == e ? parseURL(location.href).path : e
        }), resetPasswordBtn.click(function () {
            resetPasswordModal.modal({backdrop: "static"})
        }), resetPasswordConfirmBtn.click(function () {
            formPost($("form.resetPassword").serialize(), resetPasswordUrl)
        }), SearchDatePicker.length > 0 && SearchDatePicker.datepicker({
            format: "yyyy-mm-dd",
            language: "zh-CN",
            keepEmptyValues: !0,
            orientation: "bottom auto"
        }), SearchMonthPicker.length > 0 && SearchMonthPicker.datepicker({
            format: "yyyy-mm",
            language: "zh-CN",
            keepEmptyValues: !0,
            orientation: "bottom auto",
            startView: 1,
            minViewMode: 1,
            maxViewMode: 1
        }), $(".user.dropdown").hover(function () {
            $(this).addClass("open")
        }, function () {
            $(this).removeClass("open")
        }), $(".RowCurrency").length) {
        var c = null;
        $(".currencyCountInsert.purchase").length && (c = "purchase"), $(".currencyCountInsert.order").length && (c = "order"), currencyTotalCount(c)
    }
}();